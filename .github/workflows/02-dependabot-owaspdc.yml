name: Dependency Audit - OWASP Dependency-Check

on:
  workflow_dispatch:
  push:
    branches: [ "main", "**" ]
  pull_request:

jobs:
  owasp-depcheck:
    name: Run OWASP Dependency-Check on project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare security folder
        run: |
          mkdir -p security
          echo "Created folder: $PWD/security"
          
      - name: Run OWASP Dependency-Check via Docker
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          echo "Running OWASP Dependency-Check..."
          
          docker run --rm -u root \
            -e NVD_API_KEY=${{ secrets.NVD_API_KEY }} \
            -v "$(pwd):/src" \
            -w /src \
            owasp/dependency-check:latest \
            --project "ProjectSCGH Security Scan" \
            --scan ./pom.xml \
            --out ./security \
            --format "HTML,XML" \
            --enableExperimental \
            --failOnCVSS 7 || true

          echo "Scan completed. Reports saved to ./security"
          echo "Listing report files..."
          ls -lah security || echo " No reports found."

      - name: Upload HTML/XML reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: |
            security/dependency-check-report.html
            security/dependency-check-report.xml
          if-no-files-found: warn

      - name: Fail if high vulnerabilities found
        if: always()
        run: |
          if [ -f security/dependency-check-report.html ]; then
            HIGH_COUNT=$(grep -c "HIGH" security/dependency-check-report.html || true)
            CRITICAL_COUNT=$(grep -c "CRITICAL" security/dependency-check-report.html || true)
            echo "Found $HIGH_COUNT HIGH and $CRITICAL_COUNT CRITICAL vulnerabilities."
            if [ "$HIGH_COUNT" -gt 0 ] || [ "$CRITICAL_COUNT" -gt 0 ]; then
              echo "::error::High or Critical vulnerabilities detected in dependencies."
              exit 1
            else
              echo "No high/critical vulnerabilities found."
            fi
          else
            echo "::warning::No report file found to analyze."
          fi
