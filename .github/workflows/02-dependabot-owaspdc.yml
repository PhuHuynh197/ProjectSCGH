name: Dependency Audit - OWASP Dependency-Check

on:
  workflow_dispatch:
  push:
    branches: [ "main", "**" ]
  pull_request:

jobs:
  owasp-depcheck:
    name: Run OWASP Dependency-Check on project
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ L·∫•y code t·ª´ repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ T·∫°o th∆∞ m·ª•c l∆∞u b√°o c√°o
      - name: Prepare security folder
        run: |
          mkdir -p ${{ github.workspace }}/security
          echo "üìÅ Created folder: ${{ github.workspace }}/security"

      # 3Ô∏è‚É£ Ch·∫°y OWASP Dependency-Check (qu√©t pom.xml + c√°c file kh√°c n·∫øu c√≥)
      - name: Run OWASP Dependency-Check via Docker
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          echo "üöÄ Running OWASP Dependency-Check..."
          mkdir -p security

          docker run --rm -u root \
            -e NVD_API_KEY=${{ secrets.NVD_API_KEY }} \
            -v "${{ github.workspace }}:/src" \
            -w /src \
            owasp/dependency-check:latest \
            --project "Maven Project Security Scan" \
            --scan /src \
            --format "HTML,XML" \
            --enableExperimental \
            --failOnCVSS 7 || true

          echo "‚úÖ Scan completed. Reports saved to /src/security"
          echo "üìÑ Listing report files..."
          ls -lah security || echo "‚ö†Ô∏è No reports found."

      # 4Ô∏è‚É£ Upload b√°o c√°o l√™n Artifacts ƒë·ªÉ t·∫£i v·ªÅ xem
      - name: Upload HTML/XML reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: |
            ${{ github.workspace }}/security/dependency-check-report.html
            ${{ github.workspace }}/security/dependency-check-report.xml
          if-no-files-found: warn

      # 5Ô∏è‚É£ Fail job n·∫øu c√≥ l·ªó h·ªïng nghi√™m tr·ªçng
      - name: Fail if high vulnerabilities found
        if: always()
        run: |
          if [ -f security/dependency-check-report.html ]; then
            HIGH_COUNT=$(grep -c "HIGH" security/dependency-check-report.html || true)
            CRITICAL_COUNT=$(grep -c "CRITICAL" security/dependency-check-report.html || true)
            echo "üîç Found $HIGH_COUNT HIGH and $CRITICAL_COUNT CRITICAL vulnerabilities."
            if [ "$HIGH_COUNT" -gt 0 ] || [ "$CRITICAL_COUNT" -gt 0 ]; then
              echo "::error::‚ùå High or Critical vulnerabilities detected in dependencies."
              exit 1
            else
              echo "‚úÖ No high/critical vulnerabilities found."
            fi
          else
            echo "::warning::‚ö†Ô∏è No report file found to analyze."
          fi
