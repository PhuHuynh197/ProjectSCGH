name: Dependency Audit - OWASP Dependency-Check (Stable Docker Run)

on:
  workflow_dispatch:
  push:
    branches: [ "main", "**" ]
  pull_request:

jobs:
  depcheck:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ L·∫•y code t·ª´ repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ C√†i JDK & build Maven ƒë·ªÉ t·∫£i dependency
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build project with Maven
        run: mvn -B clean install -DskipTests

      # 3Ô∏è‚É£ T·∫°o th∆∞ m·ª•c l∆∞u b√°o c√°o
      - name: Prepare security folder
        run: mkdir -p security

      # 4Ô∏è‚É£ Ch·∫°y OWASP Dependency-Check b·∫±ng Docker
      - name: Run OWASP Dependency-Check via Docker
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          echo "üöÄ Running OWASP Dependency-Check..."
          echo "üìÑ pom.xml located at:"
          find . -name pom.xml

          docker run --rm -u root \
            -e NVD_API_KEY=${{ secrets.NVD_API_KEY }} \
            -v "$(pwd):/src" \
            -w /src \
            owasp/dependency-check:latest \
            --project "ProjectSCGH" \
            --scan ./pom.xml \
            --format "HTML,XML" \
            --out /src/security \
            --enableExperimental \
            --failOnCVSS 7 || true

          echo "‚úÖ Scan completed. Reports saved to ./security"
          echo "üìÅ Files generated:"
          ls -lah security || echo "‚ö†Ô∏è No reports generated."

      # 5Ô∏è‚É£ Upload HTML/XML reports l√™n Artifacts
      - name: Upload Dependency-Check Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: security/

      # 6Ô∏è‚É£ Fail n·∫øu c√≥ l·ªó h·ªïng nghi√™m tr·ªçng
      - name: Fail if high vulnerabilities found
        if: always()
        run: |
          if [ -f security/dependency-check-report.html ]; then
            HIGH=$(grep -c "HIGH" security/dependency-check-report.html || true)
            CRITICAL=$(grep -c "CRITICAL" security/dependency-check-report.html || true)
            echo "üîç Found $HIGH HIGH and $CRITICAL CRITICAL vulnerabilities."
            if [ "$HIGH" -gt 0 ] || [ "$CRITICAL" -gt 0 ]; then
              echo "::error::‚ùå High/Critical vulnerabilities detected in dependencies."
              exit 1
            else
              echo "‚úÖ No high/critical vulnerabilities found."
            fi
          else
            echo "::warning::‚ö†Ô∏è No report file found."
          fi
